#!/bin/bash

################################################################################
# Linux Log Forwarding to SIEM via Rsyslog
#
# Description: Configures rsyslog to forward security-critical logs to
#              remote SIEM (Splunk, Elastic, or syslog server)
#
# Author: Defensive Toolkit
# Date: 2025-10-15
# Version: 1.0
#
# Usage: sudo ./forward-logs-rsyslog.sh -h <siem_host> -p <port> -t <protocol>
#
# Options:
#   -h HOST    SIEM server hostname or IP (required)
#   -p PORT    SIEM receiving port (default: 514 for UDP, 6514 for TCP)
#   -t PROTO   Protocol: udp or tcp (default: tcp)
#   -s         Enable TLS/SSL for TCP (recommended)
#   --help     Show help
################################################################################

# Check if running as root
if [[ $EUID -ne 0 ]]; then
   echo "[X] This script must be run as root (sudo)"
   exit 1
fi

# Default configuration
SIEM_HOST=""
SIEM_PORT=""
PROTOCOL="tcp"
USE_TLS=false

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        -h)
            SIEM_HOST="$2"
            shift 2
            ;;
        -p)
            SIEM_PORT="$2"
            shift 2
            ;;
        -t)
            PROTOCOL="$2"
            shift 2
            ;;
        -s)
            USE_TLS=true
            shift
            ;;
        --help)
            echo "Usage: $0 -h <siem_host> -p <port> -t <protocol>"
            echo "  -h HOST    SIEM server hostname or IP (required)"
            echo "  -p PORT    SIEM receiving port (default: 514 for UDP, 6514 for TCP)"
            echo "  -t PROTO   Protocol: udp or tcp (default: tcp)"
            echo "  -s         Enable TLS/SSL for TCP (recommended)"
            echo "  --help     Show help"
            exit 0
            ;;
        *)
            echo "[X] Unknown option: $1"
            echo "Use --help for usage information"
            exit 1
            ;;
    esac
done

# Validate required parameters
if [[ -z "$SIEM_HOST" ]]; then
    echo "[X] Error: SIEM host is required (-h option)"
    exit 1
fi

# Set default port based on protocol
if [[ -z "$SIEM_PORT" ]]; then
    if [[ "$PROTOCOL" == "udp" ]]; then
        SIEM_PORT=514
    elif [[ "$USE_TLS" == true ]]; then
        SIEM_PORT=6514
    else
        SIEM_PORT=514
    fi
fi

echo "[+] Configuring rsyslog log forwarding"
echo "    SIEM: $SIEM_HOST:$SIEM_PORT"
echo "    Protocol: $PROTOCOL"
echo "    TLS: $USE_TLS"

# Check if rsyslog is installed
if ! command -v rsyslogd &> /dev/null; then
    echo "[X] rsyslog is not installed"
    echo "[i] Installing rsyslog..."

    # Detect package manager and install
    if command -v apt-get &> /dev/null; then
        apt-get update && apt-get install -y rsyslog
    elif command -v yum &> /dev/null; then
        yum install -y rsyslog
    elif command -v dnf &> /dev/null; then
        dnf install -y rsyslog
    else
        echo "[X] Cannot determine package manager. Please install rsyslog manually."
        exit 1
    fi
fi

# Backup existing rsyslog configuration
BACKUP_DIR="/etc/rsyslog.d/backup_$(date +%Y%m%d_%H%M%S)"
mkdir -p "$BACKUP_DIR"
if [[ -f /etc/rsyslog.conf ]]; then
    cp /etc/rsyslog.conf "$BACKUP_DIR/"
    echo "[+] Backed up /etc/rsyslog.conf to $BACKUP_DIR"
fi
if [[ -d /etc/rsyslog.d/ ]]; then
    cp /etc/rsyslog.d/*.conf "$BACKUP_DIR/" 2>/dev/null
    echo "[+] Backed up /etc/rsyslog.d/ to $BACKUP_DIR"
fi

# Create forwarding configuration
CONFIG_FILE="/etc/rsyslog.d/50-siem-forward.conf"

echo "[+] Creating rsyslog forwarding configuration: $CONFIG_FILE"

cat > "$CONFIG_FILE" << EOF
# Rsyslog SIEM Forwarding Configuration
# Generated by defensive-toolkit on $(date)
# SIEM: $SIEM_HOST:$SIEM_PORT ($PROTOCOL)

# Define template for structured logging
template(name="SiemFormat" type="string"
    string="<%pri%>%timestamp:::date-rfc3339% %hostname% %syslogtag% %msg%\n")

# Forward security-critical logs to SIEM
EOF

# Add protocol-specific configuration
if [[ "$PROTOCOL" == "udp" ]]; then
    cat >> "$CONFIG_FILE" << EOF

# UDP forwarding (less reliable but faster)
*.* @${SIEM_HOST}:${SIEM_PORT};SiemFormat
EOF

elif [[ "$USE_TLS" == true ]]; then
    cat >> "$CONFIG_FILE" << EOF

# TCP with TLS/SSL forwarding (secure and reliable)
# Make sure you have TLS certificates configured

# Load gtls module for TLS support
\$ModLoad imtcp
\$DefaultNetstreamDriver gtls
\$DefaultNetstreamDriverCAFile /etc/ssl/certs/ca-certificates.crt
\$DefaultNetstreamDriverCertFile /etc/ssl/certs/syslog-client.crt
\$DefaultNetstreamDriverKeyFile /etc/ssl/private/syslog-client.key
\$ActionSendStreamDriverAuthMode x509/name
\$ActionSendStreamDriverPermittedPeer ${SIEM_HOST}
\$ActionSendStreamDriverMode 1

# Forward all logs
*.* @@${SIEM_HOST}:${SIEM_PORT};SiemFormat
EOF
    echo "[!] WARNING: TLS requires certificates to be configured"
    echo "[!] Update certificate paths in $CONFIG_FILE"

else
    cat >> "$CONFIG_FILE" << EOF

# TCP forwarding (reliable)
*.* @@${SIEM_HOST}:${SIEM_PORT};SiemFormat
EOF
fi

# Add log queuing for reliability
cat >> "$CONFIG_FILE" << EOF

# Queue configuration for reliability
\$ActionQueueType LinkedList
\$ActionQueueFileName siem_forward
\$ActionResumeRetryCount -1
\$ActionQueueSaveOnShutdown on
\$ActionQueueMaxDiskSpace 1g
EOF

echo "[+] Created forwarding configuration"

# Test rsyslog configuration
echo "[+] Testing rsyslog configuration"
if rsyslogd -N1 2>&1 | grep -i error; then
    echo "[X] rsyslog configuration has errors. Please review $CONFIG_FILE"
    exit 1
else
    echo "[OK] rsyslog configuration is valid"
fi

# Restart rsyslog service
echo "[+] Restarting rsyslog service"
if systemctl restart rsyslog; then
    echo "[OK] rsyslog service restarted successfully"
else
    echo "[X] Failed to restart rsyslog service"
    exit 1
fi

# Verify rsyslog is running
if systemctl is-active --quiet rsyslog; then
    echo "[OK] rsyslog service is running"
else
    echo "[X] rsyslog service is not running"
    systemctl status rsyslog
    exit 1
fi

# Test connectivity
echo "[+] Testing connectivity to $SIEM_HOST:$SIEM_PORT"
if timeout 5 bash -c "echo >/dev/tcp/$SIEM_HOST/$SIEM_PORT" 2>/dev/null; then
    echo "[OK] Successfully connected to SIEM"
else
    echo "[!] Cannot connect to SIEM. Check firewall and SIEM status"
fi

# Send test message
echo "[+] Sending test log message"
logger -t defensive-toolkit "Test message from rsyslog forwarding configuration"
echo "[i] Check your SIEM for the test message"

# Summary
cat << EOF

================================================================
Rsyslog SIEM Forwarding Configuration Complete
================================================================
SIEM Server: $SIEM_HOST:$SIEM_PORT
Protocol: $PROTOCOL
TLS: $USE_TLS

Forwarding: All system logs (*.*)
Configuration: $CONFIG_FILE
Backup: $BACKUP_DIR

Logs being forwarded:
  - /var/log/auth.log (authentication)
  - /var/log/syslog (system logs)
  - /var/log/kern.log (kernel logs)
  - /var/log/audit/audit.log (audit logs)
  - Application logs

[OK] Logs are now being forwarded to SIEM
================================================================

Next steps:
1. Verify logs appearing in SIEM
2. Configure SIEM to parse syslog format
3. Create indexes/sourcetypes as needed
4. Tune log forwarding if needed (edit $CONFIG_FILE)

EOF
